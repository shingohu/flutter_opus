// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

import 'dynamic_library.dart';

late final opus_defines = OpusDefines();

/// Bindings for `src/opus/include/opus_defines.h`.
///
/// Regenerate bindings with `dart run ffigen --config ffigen.yaml`.
///
class OpusDefines {
  /// Holds the symbol lookup function.
  ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      get _lookup => dylib.lookup;

  /// Converts an opus error code into a human readable string.
  ///
  /// @param[in] error <tt>int</tt>: Error number
  /// @returns Error string
  ffi.Pointer<ffi.Char> opus_strerror(
    int error,
  ) {
    return _opus_strerror(
      error,
    );
  }

  late final _opus_strerrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int)>>(
          'opus_strerror');
  late final _opus_strerror =
      _opus_strerrorPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  /// Gets the libopus version string.
  ///
  /// Applications may look for the substring "-fixed" in the version string to
  /// determine whether they have a fixed-point or floating-point build at
  /// runtime.
  ///
  /// @returns Version string
  ffi.Pointer<ffi.Char> opus_get_version_string() {
    return _opus_get_version_string();
  }

  late final _opus_get_version_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'opus_get_version_string');
  late final _opus_get_version_string = _opus_get_version_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function()>();
}

const int OPUS_OK = 0;

const int OPUS_BAD_ARG = -1;

const int OPUS_BUFFER_TOO_SMALL = -2;

const int OPUS_INTERNAL_ERROR = -3;

const int OPUS_INVALID_PACKET = -4;

const int OPUS_UNIMPLEMENTED = -5;

const int OPUS_INVALID_STATE = -6;

const int OPUS_ALLOC_FAIL = -7;

const int OPUS_SET_APPLICATION_REQUEST = 4000;

const int OPUS_GET_APPLICATION_REQUEST = 4001;

const int OPUS_SET_BITRATE_REQUEST = 4002;

const int OPUS_GET_BITRATE_REQUEST = 4003;

const int OPUS_SET_MAX_BANDWIDTH_REQUEST = 4004;

const int OPUS_GET_MAX_BANDWIDTH_REQUEST = 4005;

const int OPUS_SET_VBR_REQUEST = 4006;

const int OPUS_GET_VBR_REQUEST = 4007;

const int OPUS_SET_BANDWIDTH_REQUEST = 4008;

const int OPUS_GET_BANDWIDTH_REQUEST = 4009;

const int OPUS_SET_COMPLEXITY_REQUEST = 4010;

const int OPUS_GET_COMPLEXITY_REQUEST = 4011;

const int OPUS_SET_INBAND_FEC_REQUEST = 4012;

const int OPUS_GET_INBAND_FEC_REQUEST = 4013;

const int OPUS_SET_PACKET_LOSS_PERC_REQUEST = 4014;

const int OPUS_GET_PACKET_LOSS_PERC_REQUEST = 4015;

const int OPUS_SET_DTX_REQUEST = 4016;

const int OPUS_GET_DTX_REQUEST = 4017;

const int OPUS_SET_VBR_CONSTRAINT_REQUEST = 4020;

const int OPUS_GET_VBR_CONSTRAINT_REQUEST = 4021;

const int OPUS_SET_FORCE_CHANNELS_REQUEST = 4022;

const int OPUS_GET_FORCE_CHANNELS_REQUEST = 4023;

const int OPUS_SET_SIGNAL_REQUEST = 4024;

const int OPUS_GET_SIGNAL_REQUEST = 4025;

const int OPUS_GET_LOOKAHEAD_REQUEST = 4027;

const int OPUS_GET_SAMPLE_RATE_REQUEST = 4029;

const int OPUS_GET_FINAL_RANGE_REQUEST = 4031;

const int OPUS_GET_PITCH_REQUEST = 4033;

const int OPUS_SET_GAIN_REQUEST = 4034;

const int OPUS_GET_GAIN_REQUEST = 4045;

const int OPUS_SET_LSB_DEPTH_REQUEST = 4036;

const int OPUS_GET_LSB_DEPTH_REQUEST = 4037;

const int OPUS_GET_LAST_PACKET_DURATION_REQUEST = 4039;

const int OPUS_SET_EXPERT_FRAME_DURATION_REQUEST = 4040;

const int OPUS_GET_EXPERT_FRAME_DURATION_REQUEST = 4041;

const int OPUS_SET_PREDICTION_DISABLED_REQUEST = 4042;

const int OPUS_GET_PREDICTION_DISABLED_REQUEST = 4043;

const int OPUS_SET_PHASE_INVERSION_DISABLED_REQUEST = 4046;

const int OPUS_GET_PHASE_INVERSION_DISABLED_REQUEST = 4047;

const int OPUS_GET_IN_DTX_REQUEST = 4049;

const int OPUS_SET_DRED_DURATION_REQUEST = 4050;

const int OPUS_GET_DRED_DURATION_REQUEST = 4051;

const int OPUS_SET_DNN_BLOB_REQUEST = 4052;

const int OPUS_AUTO = -1000;

const int OPUS_BITRATE_MAX = -1;

const int OPUS_APPLICATION_VOIP = 2048;

const int OPUS_APPLICATION_AUDIO = 2049;

const int OPUS_APPLICATION_RESTRICTED_LOWDELAY = 2051;

const int OPUS_SIGNAL_VOICE = 3001;

const int OPUS_SIGNAL_MUSIC = 3002;

const int OPUS_BANDWIDTH_NARROWBAND = 1101;

const int OPUS_BANDWIDTH_MEDIUMBAND = 1102;

const int OPUS_BANDWIDTH_WIDEBAND = 1103;

const int OPUS_BANDWIDTH_SUPERWIDEBAND = 1104;

const int OPUS_BANDWIDTH_FULLBAND = 1105;

const int OPUS_FRAMESIZE_ARG = 5000;

const int OPUS_FRAMESIZE_2_5_MS = 5001;

const int OPUS_FRAMESIZE_5_MS = 5002;

const int OPUS_FRAMESIZE_10_MS = 5003;

const int OPUS_FRAMESIZE_20_MS = 5004;

const int OPUS_FRAMESIZE_40_MS = 5005;

const int OPUS_FRAMESIZE_60_MS = 5006;

const int OPUS_FRAMESIZE_80_MS = 5007;

const int OPUS_FRAMESIZE_100_MS = 5008;

const int OPUS_FRAMESIZE_120_MS = 5009;

const int OPUS_RESET_STATE = 4028;
